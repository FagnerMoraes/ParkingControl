// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingControl.Data.DataContext;

#nullable disable

namespace ParkingControl.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ParkingControl.Domain.Entities.ParkingFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AditionalHourPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FinalValidityDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FullHourPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InitialValidityDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tb_taxa_estacionamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AditionalHourPrice = 1.00m,
                            FinalValidityDate = new DateTime(2023, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            FullHourPrice = 2.00m,
                            InitialValidityDate = new DateTime(2023, 1, 1, 0, 0, 1, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ParkingControl.Domain.Entities.ParkingSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CarEntryTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("col_tempo_entrada_veiculo");

                    b.Property<DateTime>("CarLeaveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("col_tempo_saida_veiculo");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("col_placa_veiculo");

                    b.Property<int>("ParkingSpotStatus")
                        .HasColumnType("int")
                        .HasColumnName("col_status_vaga");

                    b.Property<decimal>("PriceOfParking")
                        .HasColumnType("money")
                        .HasColumnName("col_preco_estacionamento");

                    b.Property<TimeSpan>("TimeOfParking")
                        .HasColumnType("time")
                        .HasColumnName("col_tempo_total_estacionamento");

                    b.HasKey("Id");

                    b.ToTable("tb_vaga_estacionamento", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
